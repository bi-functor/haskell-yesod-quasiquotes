{
  "scopeName": "inline.haskell.text",
  "fileTypes": ["hs"],
  "injectionSelector": "L:source.haskell -comment -(string -meta.embedded)",
  "patterns": [
    {
      "include": "#interpolation"
    },
    {
      "name": "meta.embedded.block.text",
      "contentName": "meta.embedded.block.text.$1",
      "begin": "(?x)(\\[)(text|st|lt|stext|ltext)(\\|)",
      "beginCaptures": {
        "1": { "name": "keyword.operator.quasi-quotation.begin.haskell" },
        "2": { "name": "entity.name.quasi-quoter.haskell" },
        "3": { "name": "keyword.operator.quasi-quotation.begin.haskell" }
      },
      "end": "(\\|\\])",
      "endCaptures": {
        "0": { "name": "keyword.operator.quasi-quotation.end.haskell" }
      },
      "patterns": [
        { "include": "source.haskell.text.$1" }
      ]
    },
    {
      "name": "meta.embedded.block.text.bar",
      "contentName": "meta.embedded.block.text.bar.$1",
      "begin": "(?x)(\\[)(sbt|lbt)(\\|)",
      "beginCaptures": {
        "1": { "name": "keyword.operator.quasi-quotation.begin.haskell" },
        "2": { "name": "entity.name.quasi-quoter.haskell" },
        "3": { "name": "keyword.operator.quasi-quotation.begin.haskell" }
      },
      "end": "(\\|\\])",
      "endCaptures": {
        "0": { "name": "keyword.operator.quasi-quotation.end.haskell" }
      },
      "patterns": [
        { "include": "source.haskell.text.$1" }
      ]
    }
  ],
  "repository": {
    "interpolation": {
      "patterns": [
        {
          "begin": "([_@#^\\*]|@\\?)\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.interpolation.begin.text"
            }
          },
          "contentName": "source.haskell.embedded",
          "end": "(\\})",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.interpolation.end.text"
            }
          },
          "name": "meta.interpolation.text",
          "patterns": [
            {
              "include": "source.haskell"
            }
          ]
        }
      ]
    }
  }
}
